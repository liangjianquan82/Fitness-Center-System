# 420-921-VA Database

## Project: Modelling and creating a database

You have to model and create a database on the topic of your choice. It should be a large enough database (at least 8
tables plus the tables coming from the many-many relationships), significantly different from the databases covered in
this course (for example, don't take the pagila DB, and change film to book). To help you choose a topic, you could, for
example, think about a web site you would like to create, and model the database you would need to support this web
site. Or it could be a database backing a mobile application, a game, ... You don't need of course to implement the web
site or the application, you only need the database that could be used in such a project.

### Submission: Sunday March 20 (before midnight)

To do individually or in teams of **2 students maximum.**

**Files to submit**: a `zip` file containing all the files mentioned below

### Part A: ER modelling (15 points)

Create an ER model (with diamond-shaped relationships, and without foreign keys) to represent your database.

You need to submit 3 files for this part:

- `project_1234567_1234568.drawio`: your ER diagram; replace `1234567` by the student number of the first team member,
  and `1234568` by the student number of the second team member (if any)
- `project_1234567_1234568.png`: your diagram exported to a `.png` image file
- `README.md`: a *Markdown* file containing the following
    - name and student number of each team member
    - general description of the database
        - the context in which the database will be used (web site, application, ...), including a short description of
          this context
        - overview of the tables in the DB (**don't** give an exhaustive list of tables and attributes, but give instead
          the general idea)
    - if necessary: explain non-obvious relationships, or non-obvious cardinalities, or any other non-obvious decisions
      made while modelling the DB

### Part B: Creating the database (10 points)

Convert your ER diagram into a relational schema, and write your `create table` statements for all your tables. Choose
good data types for your attributes, and add the necessary constraints ( `not null`, primary keys, foreign keys, `check`
, `default`, ...).

Insert some data in your tables. There's no exact number of rows to insert, but there should be enough data to test some
queries that could be used in an application that would be developed later on.

You need to submit 3 files for this part:

- `project_1234567_1234568_create.sql`: contains the `create table` statements, and some other statements such
  as `set search_path`, `create schema`, `drop table`, ... but no `insert` or `update`
- `project_1234567_1234568_insert.sql`: contains the `insert` statements, and maybe some other statements such
  as `set search_path`, `update`...
- `project_1234567_1234568_datagrip.png`: the diagram generated by datagrip for your database

### Part C: Queries (5 points)

Write at least 5 queries that could be used in an application based on your DB. These queries should not be too simple
(no `select * from customers` for example). The queries should be realistic and varied (
no `select * from customers where name like 'A%'` followed by `select * from customers where name like 'B%'`). The
queries should be complicated enough, they should contain some `join`s and/or `group by`s and/or sub-queries.

You need to submit 1 file for this part:

- `project_1234567_1234568_select.sql` : contains your queries, properly documented with a comment preceding each query,
  describing the query and how/where it could be used

## Part D: Presentation (10 points)

You have to present your project, but since time is limited, the presentations will not be live during class time.
Instead, you will have to record your presentation, and share it with the teacher. You can record your presentation with
zoom, or any other software allowing to record your screen and your voice, such as OBS studio for example.

Ideally, to keep the size of your submission small, you should upload your video on some platform (Vimeo, Youtube, ...),
and share a private link with the teacher. Put your link in the `README.md` file, near the top, after your name. Another
option is to upload your video to your Vanier OneDrive storage, then share your video with the teacher (email:
rinfretd@vaniercollege.qc.ca). If these are not possible for you, then you can include your video (probably as a mp4
file, or some other common format) inside your `zip` file.

Your presentation should be around 10 to 15 minutes long. It should not be more than 20 minutes. You don't need to
prepare slides (but you can use slides if you want). It should start by giving an overview of your DB, how or where it
would be used (a bit like in your `README.md` file), then you can present your ER diagram. You don't need to mention
every little detail, such as mentioning every attribute. You should focus instead of the entities and their
relationships, including their cardinalities. Then you should go quickly through the DB creation part, focusing more on
the constraints you added (don't read all the attributes and their data types, it would take too long). Finally, you
should show the execution of your queries on the DB and explain them briefly.